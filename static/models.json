{
    "Book": "class Book(models.Model):\n\n    book_id = models.CharField(primary_key=True, max_length=255)\n    book_name = models.CharField(max_length=255)\n\n    def __str__(self):\n        return self.book_name",
    "Chapter": "class Chapter(models.Model):\n\n    chapter_id = models.CharField(primary_key=True, max_length=255)\n    chapter_name = models.CharField(max_length=255)\n    book_id = models.ForeignKey(Book, on_delete=models.CASCADE, to_field='book_id')\n\n    def __str__(self):\n        return self.chapter_name",
    "Character": "class Character(models.Model):\n\n    character_id = models.CharField(primary_key=True, max_length=255)\n    character_name = models.CharField(max_length=255)\n    character_race = models.CharField(max_length=255)\n    character_gender = models.CharField(max_length=255)\n    character_birth = models.CharField(max_length=255)\n    character_death = models.CharField(max_length=255)\n    character_hair = models.CharField(max_length=255)\n    character_height = models.CharField(max_length=255)\n    character_relam = models.CharField(max_length=255)\n    character_spouse = models.CharField(max_length=255)\n    character_wikiurl = models.CharField(max_length=255)\n\n    def __str__(self):\n        return self.character_name",
    "Movie": "class Movie(models.Model):\n    # name,runtimeInMinutes,budgetInMillions,boxOfficeRevenueInMillions,academyAwardNominations,academyAwardWins,rottenTomatoesScore,_id\n    movie_id = models.CharField(primary_key=True, max_length=255)\n    movie_name = models.CharField(max_length=255)\n    movie_runtimeInMinutes = models.IntegerField()\n    movie_budgetInMillions = models.IntegerField()\n    movie_boxOfficeRevenueInMillions = models.FloatField()\n    movie_academyAwardNominations = models.IntegerField()\n    movie_academyAwardWins = models.IntegerField()\n    movie_rottenTomatoesScore = models.FloatField()\n\n    def __str__(self):\n        return self.movie_name",
    "Quote": "class Quote(models.Model):\n    # dialog,movie,character,_id\n    quote_id = models.CharField(primary_key=True, max_length=255)\n    quote_dialog = models.CharField(max_length=1024)\n    quote_movie_id = models.ForeignKey(Movie, on_delete=models.CASCADE, to_field='movie_id')\n    quote_character_id = models.ForeignKey(Character, on_delete=models.CASCADE, to_field='character_id')\n\n    def __str__(self):\n        return self.quote_dialog"
}